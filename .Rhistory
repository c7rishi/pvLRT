attr(lr_stat_pvalue, "lrstat") <- lr_stat_obs
attr(lr_stat_pvalue, "omega") <- omega_vec
attr(lr_stat_pvalue, "omega_lrstat") <- omega_lrstat_vec
attr(lr_stat_pvalue, "omega_pvalue") <- omega_pval_vec
library(pvLRT)
test2 <- lrt_zi_poisson(statin46, test_drug_idx = 1:6)
library(pvLRT)
?lrt_zi_poisson
data("lovastatin")
# no grouping -- each drug forms its own class
test1 <- lrt_zi_poisson(lovastatin)
## extract the observed LRT statistic
attr(test1, "lrstat")
## extract the estimated omegas
attr(test1, "omega")
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
install.packages("progressr")
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
progressr::handler
?progressr::handler
?progressr::handlers
library(pvLRT)
?lrt_zi_poisson
progressr::handlers("progress", global = TRUE)
progressr::handlers("progress")
source("D:/Documents/GitHub/pvLRT/R/lrt_zi_poisson.R")
rm(list=ls())
library(pvLRT)
?lrt_zi_poisson
progressr::handlers("progress")
test1 <- lrt_zi_poisson(lovastatin)
library(progressr)
handlers(global = TRUE)
test1 <- lrt_zi_poisson(lovastatin)
?furrr::furrr_options
set.seed(1); runif(1); rnorm(1)
set.seed(1); rnorm(1); rnorm(1)
set.seed(1); rnorm(1, 1); rnorm(1)
set.seed(1); rnorm(1, 2); rnorm(1)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
dim(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
test1 <- lrt_zi_poisson(lovastatin)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
test1 <- lrt_zi_poisson(lovastatin, test_omega = TRUE)
test1 <- lrt_zi_poisson(lovastatin, test_omega = TRUE)
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin, test_omega = TRUE)
test1 <- lrt_zi_poisson(statin46)
test1 <- lrt_zi_poisson(statin1491)
devtools::build()
test1 <- lrt_zi_poisson(statin1491, skip_null_omega_estimation = FALSE)
plot(rnorm(100))
lr_stat_null <- NA %>% `class<-`("error")
library(pvLRT)
lr_stat_null <- NA %>% `class<-`("error")
is (lr_stat_null, "error")
?lrt_zi_poisson
test1 <- lrt_zi_poisson(lovastatin)
source("D:/Documents/GitHub/pvLRT/R/significant_pairs.R")
rm(list=ls())
library(pvLRT)
source("D:/Documents/GitHub/pvLRT/R/significant_pairs.R")
rm(list=ls())
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
significant_pairs(test1)
is.pvlrt <- funciton(obj,...) {
is (obj, "pvlrt")
}
is.pvlrt <- funciton(obj,...) {
is (obj, "pvlrt")
}
is.pvlrt <- function(obj,...) {
is (obj, "pvlrt")
}
is.pvlrt(pvlrt_obj)
pval <- pvlrt_obj
lrstat <- attr(pvlrt_obj, "lrstat")
pval
lrstat
idx <- which(pval < level, arr.ind = TRUE)
idx
ae_names <- rownames(pvlrt_obj)
drug_names <- colnames(pvlrt_obj)
res <- data.frame(
AE = ae_names[idx_mat[, "row"]],
Drug = ae_names[idx_mat[, "col"]]
)
idx_mat <- which(pval < level, arr.ind = TRUE)
ae_names <- rownames(pvlrt_obj)
drug_names <- colnames(pvlrt_obj)
res <- data.frame(
AE = ae_names[idx_mat[, "row"]],
Drug = ae_names[idx_mat[, "col"]]
)
res
pval
res <- data.frame(
AE = ae_names[idx_mat[, "row"]],
Drug = drug_names[idx_mat[, "col"]]
)
res
lrstat_pval <- mapply(
function(row_id, col_id) {
list(
pval = pval[row_id, col_id],
lrstat = lrstat[row_id, col_id]
)
},
ae_names,
drug_names
)
lrstat_pval <- idx_mat %>%
apply(
1,
function(x) {
list(
lrstat = pval[x[1], x[2]],
p.value = pval[x[1], x[2]]
)
}
)
lrstat_pval
lrstat_pval <- idx_mat %>%
apply(
1,
function(x) {
list(
lrstat = pval[x[1], x[2]],
p.value = pval[x[1], x[2]]
)
}
) %>%
do.call(cbind, .)
lrstat_pval
lrstat_pval <- idx_mat %>%
apply(
1,
function(x) {
list(
lrstat = pval[x[1], x[2]],
p.value = pval[x[1], x[2]]
)
}
) %>%
do.call(rbind, .)
lrstat_pval
?summary
library(pvLRT)
summary(test1)
class(test1)
library(pvLRT)
summary(test1)
library(pvLRT)
summary(test1)
tab_pval <- object %>%
as.data.matrix() %>%
data.table::as.data.table(keep.rownames = TRUE)
tab_pval <- object %>%
data.matrix() %>%
data.table::as.data.table(keep.rownames = TRUE)
browser()
tab_pval <- object %>%
as.matrix() %>%
data.matrix() %>%
data.table::as.data.table(keep.rownames = TRUE)
object %>%
as.matrix()
object %>%
matrix()
attributes(object)
object %>%
`class<-`("matrix")
data.matrix() %>%
data.table::as.data.table(keep.rownames = TRUE)
tab_pval <- object %>%
`class<-`("matrix") %>%
data.matri() %>%
data.table::as.data.table(
keep.rownames = TRUE
)
tab_pval <- object %>%
`class<-`("matrix") %>%
data.matrix() %>%
data.table::as.data.table(
keep.rownames = TRUE
)
tab_pval
data.table::dcast()
?data.table::melt
measure = "p.value"
object %>%
`class<-`("matrix") %>%
data.matrix()
object %>%
`class<-`("matrix") %>%
data.matrix() %>%
data.table::as.data.table(
keep.rownames = TRUE
)
object %>%
{
if (measure == "p.value") {
`class<-`(., "matrix")
} else {
attr(., "lrstat")
}
}
tab_lrstat_pval <-
c("lrstat", "p.value") %>%
lapply(
function(measure) {
object %>%
{
if (measure == "p.value") {
`class<-`(., "matrix")
} else {
attr(., "lrstat")
}
} %>%
data.matrix() %>%
data.table::as.data.table(
keep.rownames = TRUE
) %>%
data.table::setnames(
old = "rn",
new = "AE"
) %>%
data.table::melt(
id.vars = "AE",
variable.name = measure,
)
}
)
tab_lrstat_pval
tab_lrstat_pval <-
c("lrstat", "p.value") %>%
lapply(
function(measure) {
object %>%
{
if (measure == "p.value") {
`class<-`(., "matrix")
} else {
attr(., "lrstat")
}
} %>%
data.matrix() %>%
data.table::as.data.table(
keep.rownames = TRUE
) %>%
data.table::setnames(
old = "rn",
new = "AE"
) %>%
data.table::melt(
id.vars = "AE",
variable.name = "Drug",
value.name = measure
)
}
)
tab_lrstat_pval
tab_lrstat_pval <-
c("lrstat", "p.value") %>%
lapply(
function(measure) {
object %>%
{
if (measure == "p.value") {
`class<-`(., "matrix")
} else {
attr(., "lrstat")
}
} %>%
data.matrix() %>%
data.table::as.data.table(
keep.rownames = TRUE
) %>%
data.table::setnames(
old = "rn",
new = "AE"
) %>%
data.table::melt(
id.vars = "AE",
variable.name = "Drug",
value.name = measure
)
}
) %>%
Reduce(
function(dt1, dt2) {
merge(dt1, dt2, by = c("AE", "Drug"))
},
.
)
tab_lrstat_pval
library(pvLRT)
summary(test1)
extract_zi_probability(test1)
extract_significant_pairs(test1)
#' @export
extract_significant_pairs <- function(object, significance_level = 0.05, ...) {
if (!is.pvlrt(object)) {
stop("object must be a 'pvlrt' object.")
}
p.value <- NULL
out <- summary(object)[p.value < significance_level]
out
}
rm(extract_significant_pairs)
library(pvLRT)
extract_significant_pairs(test1)
library(pvLRT)
extract_significant_pairs(test1)
summary(object)
significance_level
summary(object)[p.value < significance_level, ]
summary(object)[p.value > significance_level, ]
rm(p.value)
out <- summary(object)[p.value > significance_level, ]
summary(object)
out <- summary(object)[p.value > significance_level, ]
rm(list=ls())
library(pvLRT)
test1 <- lrt_zi_poisson(lovastatin)
nm <- c("Saptarshi Chakraborty1*, Brett L. Ecker2*, Ken Seier1, Victoria G. Aveson2, Vinod P. Balachandran2,3, Jeffrey A. Drebin2, Michael I. D'Angelica2, T. Peter Kingham2, Carlie S. Sigel4, Kevin C. Soares2, Efsevia Vakiani4,5, Alice C Wei2, Rohit Chandwani6,7, Mithat Gonen1^, Ronglai Shen1^, William R. Jarnagin2^")
library(tidyverse)
nm %>%
strsplit("\\,")
nm %>%
strsplit("\\,") %>%
unlist()
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim()
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""]
xx = "Michael I. D'Angelica"
xx %>%
strsplit(" ") %>%
imap(
function(yy, idx) {
if(idx > 1) {
yy
} else {
substr(yy, 1, 1)
}
}
)
xx %>%
strsplit(" ")
xx %>%
strsplit(" ")
nn <- length(yy)
surname <- yy[nn]
xx
xx %>%
strsplit(" ")
xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
nn
surname
firstinit
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1)
firstinit
yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste("\\.")
paste(collapse = " ")
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0("\\.") %>%
paste(collapse = " ")
if(idx ) {
yy
} else {
substr(yy, 1, 1)
}
firstinit
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
firstinit
glue::glue("{surname}, {firstinit}")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
sapply(
function(xx) {
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*") %>%
sapply(
function(xx) {
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*") %>%
sapply(
function(xx) {
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ") %>%
cat()
library(pvLRT)
?lrt_zi_poisson
# use gamma prior assumption on signals while
# estimating omegas
test3 <- lrt_zi_poisson(
statin1491
)
test3
test3
summary(test3)
?plot
library(pvLRT)
library(pvLRT)
install.packages("pheatmap")
library(pvLRT)
library(pvLRT)
