firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*") %>%
sapply(
function(xx) {
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ")
nm %>%
strsplit("\\,") %>%
unlist() %>%
str_remove("\\d") %>%
str_trim() %>%
.[. != ""] %>%
str_remove("\\^|\\*") %>%
sapply(
function(xx) {
yy <- xx %>%
strsplit(" ") %>%
unlist()
nn <- length(yy)
surname <- yy[nn]
firstinit <- yy[-nn] %>%
sapply(substr, start = 1, stop = 1) %>%
paste0(".") %>%
paste(collapse = " ")
glue::glue("{surname}, {firstinit}")
}
) %>%
paste(collapse = ", ") %>%
cat()
library(pvLRT)
?lrt_zi_poisson
# use gamma prior assumption on signals while
# estimating omegas
test3 <- lrt_zi_poisson(
statin1491
)
test3
test3
summary(test3)
?plot
library(pvLRT)
library(pvLRT)
install.packages("pheatmap")
library(pvLRT)
library(pvLRT)
library(pvLRT)
plot(cars)
library(pvLRT)
?lrt_zi_poisson
data("lovastatin")
test1 <- lrt_zi_poisson(lovastatin)
test1
library(pvLRT)
library(tidyverse)
library(pvLRT)
meths <- list(
lambda_lrt = lrt_poisson,
pseudo_lambda_lrt = pvlrt
)
res_list <- list(
lambda_lrt = lrt_poisson,
pseudo_lambda_lrt = pvlrt
) %>%
lapply(
function(this_fn) {
this_fn(dat)
}
)
dat <- statin
set.seed(100)
res_list <- list(
lambda_lrt = lrt_poisson,
pseudo_lambda_lrt = pvlrt
) %>%
lapply(
function(this_fn) {
this_fn(dat)
}
)
barplot(res_list$lambda_lrt, p.value_upper = 0.05)
?data.table::setnames
source("D:/Documents/GitHub/pvLRT/R/pvlrt-postprocessing-utils.R")
saveRDS(res_list, "~/results_pvlrt_statin6039.RDS")
rm(list = ls())
?missingArg
library(pvLRT)
library(pvLRT)
?set_AE_names
library(tidyverse)
library(pvLRT)
set.seed(100)
dat <- statin46
res_list <- list(
lambda_lrt = lrt_poisson,
pseudo_lambda_lrt = pvlrt
) %>%
lapply(
function(this_fn) {
this_fn(dat)
}
)
res_list$lambda_lrt %>% summary()
res_list$lambda_lrt
extract_lrstat_matrix(res_list$lambda_lrt)
extract_pvalue_matrix(res_list$lambda_lrt)
library(pvLRT)
res_list$lambda_lrt
res_list$lambda_lrt
tmp = res_list$lambda_lrt
tmp1 = set_AE_names(tmp)
tmp1 = set_AE_names(tmp, old = "atorvastatin", new = "Atorvastatin")
tmp1
dimnames(tmp1)
tmp1 = set_Drug_names(tmp, old = "atorvastatin", new = "Atorvastatin")
tmp1
tmp1 = tmp %>% set_Drug_names(old = extract_Drug_names(.), new = toupper(extract_Drug_names(.)))
tmp1
library(pvLRT)
extract_pvalue_matrix(tmp1)
attributes(tmp1) %>% names()
attributes(tmp1) %>% names() %>% dput()
library(pvLRT)
extract_pvalue_matrix(tmp1)
library(pvLRT)
install.packages("testthat")
library(pvLRT)
library(BAMBI)
?fit_vmsinmix
# illustration only - more iterations needed for convergence
fit.vmsin.20 <- fit_vmsinmix(tim8, ncomp = 3, n.iter =  200,
n.chains = 1)
fit.vmsin.20
contour(fit.vmsin.20)
contour(fit.vmsin.20, xlab = "x")
contour.angmix
BAMBI:::contour.angmix
BAMBI:::contour.angmcmc
fit.vmsin.20$data <- colnames("ϕ", "ψ")
colnames(fit.vmsin.20$data) <- c("ϕ", "ψ")
contour(fit.vmsin.20)
colnames(fit.vmsin.20$data) <- c(bquote(phi), bquote(psi))
contour(fit.vmsin.20)
colnames(fit.vmsin.20$data) <- c("ϕ", "ψ")
contour(fit.vmsin.20)
news
news()
pdf("~/tmp.pdf")
contour(fit.vmsin.20)
dev.off
dev.off()
cairo_pdf("~/tmp.pdf")
contour(fit.vmsin.20)
dev.off()
BAMBI:::contour.angmcmc
View(BAMBI:::contour.angmcmc)
library(pvLRT)
install.packages("stylr")
install.packages("styler")
styler:::style_active_file()
styler:::style_active_pkg()
?heatmap_pvlrt
library(pvLRT)
?heatmap_pvlrt
source("C:/Users/chakrab2/Documents/GitHub/pvLRT/R/pvlrt-plots.R")
rm(list=ls())
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
?pvlrt
library(pvLRT)
?pvLRT
library(pvLRT)
?pvLRT
??pvLRT
library(pvLRT)
?lm
library(pvLRT)
?pvlrt
?pvlrt
?pvLRT
??pvLRT
library(pvLRT)
library(pvLRT)
library(pvLRT)
?`pvLRT-package`
devtools::install_github("csgillespie/roxygen2Comment")
library(pvLRT)
?pvLRT
?pvlrt
library(pvLRT)
?pvlrt
library(pvLRT)
?extract_AE_names
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
?as.matrix.pvlrt
?pvlrt
library(pvLRT)
library(pvLRT)
library(pvLRT)
library(pvLRT)
?as.matrix.pvlrt
?pvlrt
library(pvLRT)
devtools::check_win_devel()
devtools::check_win_release()
devtools::check_win_oldrelease()
devtools::check_win_oldrelease()
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_devel
devtools:::check_win
devtools::build()
plot(test1)
?heatmap_pvlrt
library(pvLRT)
?heatmap_pvlrt
test1 <- pvlrt(statin46)
heatmap_pvlrt(test1)
heatmap_pvlrt(test1, arrange_alphabetical = TRUE)
library(pvLRT)
?heatmap_pvlrt
test1 <- pvlrt(statin46, nsim = 500)
bubbleplot_pvlrt(test1)
heatmap_pvlrt(test1)
barplot(test1)
?lrt_zi_poisson
test1 <- lrt_zi_poisson(statin46, nsim = 500)
test1
?lrt_vanilla_poisson
# no grouping -- each drug forms its own class
test1 <- lrt_poisson(lovastatin, nsim = 500)
summary(test)
summary(test1)
summary(test1) %>% attributes() %>% names()
summary(test1) %>% attributes() %>% class()
summary(test1) %>%  class()
test1 <- pvlrt(statin46, test_zi = TRUE, nsim = 500)
summary(test1, show_zi = TRUE)
summary(test1, show_zi = TRUE) %>% attr("zi")
summary(test1, show_zi = TRUE) %>% attr("zi") -> kk
kk
kk
?p.adjust
?ggplot2::ggplot
library(pvLRT)
devtools::run_examples()
library(pvLRT)
devtools::run_examples()
library(pvLRT)
devtools::run_examples()
library(pvLRT)
?AIC
?logLik
library(pvLRT)
?logLik.pvlrt
# 500 bootstrap iterations (nsim) in each example below
# are for quick demonstration only --
# we recommended setting nsim to 10000 (default) or bigger
set.seed(100)
# estimates zero inflation probabilities
test1 <- pvlrt(statin46, nsim = 500)
logLik(test1)
AIC(test1)
BIC(test1)
# compare with and without zero inflation
BIC(logLik(test1, type = "full-zip"))
BIC(logLik(test1, type = "full-poisson"))
# ordinary poisson model
## equivalent to pvlrt(statin46, zi_prob = 0, nsim = 500)
test2 <- lrt_poisson(statin46, nsim = 500)
all.equal(logLik(test2, "full-zip"), logLik(test2, "full-poisson"))
library(pvLRT)
library(pvLRT)
?extract_AE_names
?extract_zi_probability
library(pvLRT)
?extract_zi_probability
# 500 bootstrap iterations (nsim) in the example below
# are for quick demonstration only --
# we recommended setting nsim to 10000 (default) or bigger
test1 <- pvlrt(statin46, test_zi = TRUE, nsim = 500)
extract_lrstat_matrix(test1)
extract_p_value_matrix(test1)
extract_zi_probability(test1)
extract_n_matrix(test1)
extract_significant_pairs(test1)
extract_AE_names(test1)
extract_Drug_names(test1)
library(pvLRT)
?set_AE_names
devtools::build_manual()
statin1491 %>% rownames() %>% tail(1)
statin1491 %>% rownames() %>% grep("other", ., ignore.case = TRUE)
statin1491 %>% rownames() %>% grep("other", ., ignore.case = TRUE, value = TRUE)
statin1491 %>% rownames() %>% grep("PT", ., ignore.case = TRUE, value = TRUE)
library(pvLRT)
library(pvLRT)
statin1491 %>% rownames() %>% grep("PT", ., ignore.case = TRUE, value = TRUE)
devtools::build_manual()
library(pvLRT)
?bubbleplot_pvlrt
library(pvLRT)
devtools::build_manual()
library(pvLRT)
citation("pvLRT")
library(pvLRT)
citation("pvLRT")
"Various Likelihood Ratio Test-Based Approaches to Pharmacovigilance" %>% nchar()
"Likelihood Ratio Test-Based Approaches to Pharmacovigilance" %>% nchar()
?roxygen2::tag_value
?extract_AE_names
?lrt_zi_poisson
?pvlrt
# use non-parametric bootstrap to evaluate the null distribution
# takes longer, due to computational costs with non-parametric
# contigency table generation
test4 <- pvlrt(statin46, null_boot_type = "non-parametric", nsim = 500)
test4
devtools::check_win_devel()
devtools::check_win_release()
devtools::check_win_oldrelease()
devtools::check_win_devel()
library(pvLRT)
devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_release()
devtoll
devtools::build()
devtools::build_manual()
library(pvLRT)
devtools::build()
library(pvLRT)
devtools::run_examples()
library(pvLRT)
devtools::build()
devtools::build()
devtools::build_manual()
devtools::build()
library(pvLRT)
?lrt_poisson
test1 <- pvlrt(statin46, test_zi = TRUE, nsim = 500)
extract_AE_names(test1)
extract_Drug_names(test1)
set_AE_names(test1, old = "Rhabdomyolysis", new = "Rhabdo")
set_Drug_names(test1, old = "other", new = "Other-Drugs")
summary(test1)
library(pvLRT)
library(pvLRT)
?statin
library(pvLRT)
library(pvLRT)
?gbca
?statin
?statin1491
library(pvLRT)
library(pvLRT)
?statin
library(pvLRT)
library(pvLRT)
data("rv")
rv
pvlrt(rv, test_drug_idx = 1)
test1 <- pvlrt(rv, test_drug_idx = 1)
AIC(test1)
BIC(test1)
test1 <- pvlrt(rv, test_drug_idx = 1, zi_prob = 0)
test1
test1 <- pvlrt(rv, test_drug_idx = 1, zi_prob = F)
test1
?pvlrt
test2 <- pvlrt(rv, test_drug_idx = 1)
test2 %>% class()
plot(test2)
AIC(test2, test1)
AIC(test2, test1)
test1
test2
library(pvLRT)
plot(runif(100))
dim(rv)
dim(rvyoung)
dim(rvold)
dim(rvold)
library(pvLRT)
?rv
library(pvLRT)
library(tidyverse)
library(tidyverse)
all_data <- here::here("data-raw/") %>%
list.files(pattern = "\\.xlsx$", full.names = TRUE) %>%
setNames(
strsplit(., "/") %>%
map_chr(tail, 1) %>%
str_remove("\\.xlsx") %>%
strsplit(" ") %>%
map_chr(head, 1) %>%
str_remove("_all") %>%
str_remove("_") %>%
tolower()
) %>%
lapply(readxl::read_excel) %>%
lapply(
. %>%
select(-pt_marginal) %>%
filter(!toupper(pt) == "TOTAL") %>%
# filter(!grepl("Total", pt, ignore.case = TRUE)) %>%
as.data.frame() %>%
magrittr::set_rownames(.$pt) %>%
select(-pt) %>%
data.matrix() %>%
magrittr::set_rownames(
rownames(.) %>%
str_to_title()
) %>%
magrittr::set_colnames(
colnames(.) %>%
srt_to_tile()
)
)
library(tidyverse)
all_data <- here::here("data-raw/") %>%
list.files(pattern = "\\.xlsx$", full.names = TRUE) %>%
setNames(
strsplit(., "/") %>%
map_chr(tail, 1) %>%
str_remove("\\.xlsx") %>%
strsplit(" ") %>%
map_chr(head, 1) %>%
str_remove("_all") %>%
str_remove("_") %>%
tolower()
) %>%
lapply(readxl::read_excel) %>%
lapply(
. %>%
select(-pt_marginal) %>%
filter(!toupper(pt) == "TOTAL") %>%
# filter(!grepl("Total", pt, ignore.case = TRUE)) %>%
as.data.frame() %>%
magrittr::set_rownames(.$pt) %>%
select(-pt) %>%
data.matrix() %>%
magrittr::set_rownames(
rownames(.) %>%
str_to_title()
) %>%
magrittr::set_colnames(
colnames(.) %>%
str_to_title()
)
)
## code to prepare `DATASET` dataset goes here
for (xx in names(all_data)) assign(xx, all_data[[xx]])
usethis::use_data(statin, overwrite = TRUE, compress = "xz")
usethis::use_data(statin1491, overwrite = TRUE, compress = "xz")
usethis::use_data(statin46, overwrite = TRUE, compress = "xz")
usethis::use_data(gbca, overwrite = TRUE, compress = "xz")
usethis::use_data(rv, overwrite = TRUE, compress = "xz")
usethis::use_data(rvyoung, overwrite = TRUE, compress = "xz")
usethis::use_data(rvold, overwrite = TRUE, compress = "xz")
library(pvLRT)
2.4/6
2.4/12
1.0/12
devtools::check_win_devel()
devtools::check_win_oldrelease()
devtools::check_win_release()
library(pvLRT)
library(pvLRT)
devtools::check_win_devel()
devtools::check_win_release()
devtools::check_win_oldrelease()
